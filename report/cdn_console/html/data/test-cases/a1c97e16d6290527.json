{
  "uid" : "a1c97e16d6290527",
  "name" : "test_CDN_243743",
  "fullName" : "testcases.cdn.bs_console.test_bs_refresh.Test_Bs_Refresh#test_CDN_243743",
  "historyId" : "8c469f626a9c0dbf7f7ca80d68f9e0a8",
  "time" : {
    "start" : 1606461302560,
    "stop" : 1606461304519,
    "duration" : 1959
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '请求参数错误' in '{\"duration\":\"1803141460\",\"reason\":\"请求错误\",\"code\":\"100012\",\"data\":{\"values\":[\"http:\\\\/\\\\/lttestzt2.ctdns.net\\\\/images\\\\...s error: (3118, \\\\\"Access denied for user \\'refresh_prefetch\\'@\\'*75\\'. Account is locked.\\\\\")\",\"host\":\"*.*.*.1:9810\"}'\n +  where '{\"duration\":\"1803141460\",\"reason\":\"请求错误\",\"code\":\"100012\",\"data\":{\"values\":[\"http:\\\\/\\\\/lttestzt2.ctdns.net\\\\/images\\\\...s error: (3118, \\\\\"Access denied for user \\'refresh_prefetch\\'@\\'*75\\'. Account is locked.\\\\\")\",\"host\":\"*.*.*.1:9810\"}' = <Response [200]>.text",
  "statusTrace" : "self = <bs_console.test_bs_refresh.Test_Bs_Refresh object at 0x000002423B7F3D68>\n\n    @allure.story('CreateRefreshTask,刷新大量目录 ')\n    def test_CDN_243743(self):\n        url = self.console_host + '/cdn/gw/refresh/CreateRefreshTask'\n        # 只能刷新已启用的域名\n        used_domain_list = self.get_domain_list\n        directory_list = ['/images/', '/text/', '/pdf/']\n        valuse_list = []\n        for temp in used_domain_list:\n            valuse_list.append(temp + directory_list[0])\n            valuse_list.append(temp + directory_list[1])\n            valuse_list.append(temp + directory_list[2])\n        payload = {\n            \"data\": {\"workspaceId\": self.workspace_id, \"values\": valuse_list,\n                     \"domain\": \"\", \"task_type\": \"2\"}}\n        print(type(payload), payload)\n        response = self.session.request(\"POST\", url, data=json.dumps(payload), timeout=10)\n        print(\"-------------------查询 CreateRefreshTask 接口-------------------\")\n        print('请求url: ' + url)\n        print(\"请求data: \" + str(payload))\n        print(\"返回： \" + response.text)\n        print(\"重点验证：\"  \"  expect： 返回码与响应时间\")\n        assert response.status_code == 200\n>       assert '请求参数错误' in response.text\nE       assert '请求参数错误' in '{\"duration\":\"1803141460\",\"reason\":\"请求错误\",\"code\":\"100012\",\"data\":{\"values\":[\"http:\\\\/\\\\/lttestzt2.ctdns.net\\\\/images\\\\...s error: (3118, \\\\\"Access denied for user \\'refresh_prefetch\\'@\\'*75\\'. Account is locked.\\\\\")\",\"host\":\"*.*.*.1:9810\"}'\nE        +  where '{\"duration\":\"1803141460\",\"reason\":\"请求错误\",\"code\":\"100012\",\"data\":{\"values\":[\"http:\\\\/\\\\/lttestzt2.ctdns.net\\\\/images\\\\...s error: (3118, \\\\\"Access denied for user \\'refresh_prefetch\\'@\\'*75\\'. Account is locked.\\\\\")\",\"host\":\"*.*.*.1:9810\"}' = <Response [200]>.text\n\ntestcases\\cdn\\bs_console\\test_bs_refresh.py:288: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1606461302560,
      "stop" : 1606461302560,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1606461290385,
      "stop" : 1606461291735,
      "duration" : 1350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1606461304896,
      "stop" : 1606461304896,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BS 客户控制台刷新预取页接口测试"
  }, {
    "name" : "story",
    "value" : "CreateRefreshTask,刷新大量目录 "
  }, {
    "name" : "parentSuite",
    "value" : "testcases.cdn.bs_console"
  }, {
    "name" : "suite",
    "value" : "test_bs_refresh"
  }, {
    "name" : "subSuite",
    "value" : "Test_Bs_Refresh"
  }, {
    "name" : "host",
    "value" : "LAPTOP-0QCFU979"
  }, {
    "name" : "thread",
    "value" : "8704-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.cdn.bs_console.test_bs_refresh"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a1c97e16d6290527.json",
  "parameterValues" : [ ]
}