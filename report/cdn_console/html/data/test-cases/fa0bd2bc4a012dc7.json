{
  "uid" : "fa0bd2bc4a012dc7",
  "name" : "test_CDN_243739",
  "fullName" : "testcases.cdn.bs_console.test_bs_refresh.Test_Bs_Refresh#test_CDN_243739",
  "historyId" : "1f5aad1a54feee7e3a0fe6222d0aaeb6",
  "time" : {
    "start" : 1606461301750,
    "stop" : 1606461301750,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "IndexError: Cannot choose from an empty sequence",
  "statusTrace" : "self = <bs_console.test_bs_refresh.Test_Bs_Refresh object at 0x000002423B88D198>\n\n    @allure.story('CreateRefreshTask 刷泛域名目录')\n    def test_CDN_243739(self):\n        url = self.console_host + '/cdn/gw/refresh/CreateRefreshTask'\n>       domain = random.choice(self.get_fan_domain) + \"/images/\"\n\ntestcases\\cdn\\bs_console\\test_bs_refresh.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <random.Random object at 0x0000024237EDDDB8>, seq = []\n\n    def choice(self, seq):\n        \"\"\"Choose a random element from a non-empty sequence.\"\"\"\n        try:\n            i = self._randbelow(len(seq))\n        except ValueError:\n>           raise IndexError('Cannot choose from an empty sequence') from None\nE           IndexError: Cannot choose from an empty sequence\n\nC:\\Users\\q\\AppData\\Local\\Programs\\Python\\Python36\\lib\\random.py:260: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1606461290385,
      "stop" : 1606461291735,
      "duration" : 1350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "__pytest_repeat_step_number",
    "time" : {
      "start" : 1606461301750,
      "stop" : 1606461301750,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1606461304896,
      "stop" : 1606461304896,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "BS 客户控制台刷新预取页接口测试"
  }, {
    "name" : "story",
    "value" : "CreateRefreshTask 刷泛域名目录"
  }, {
    "name" : "parentSuite",
    "value" : "testcases.cdn.bs_console"
  }, {
    "name" : "suite",
    "value" : "test_bs_refresh"
  }, {
    "name" : "subSuite",
    "value" : "Test_Bs_Refresh"
  }, {
    "name" : "host",
    "value" : "LAPTOP-0QCFU979"
  }, {
    "name" : "thread",
    "value" : "8704-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.cdn.bs_console.test_bs_refresh"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "fa0bd2bc4a012dc7.json",
  "parameterValues" : [ ]
}